# GitHub-Aligned Agent Personas
# Following GitHub Flow best practices

master_orchestrator:
  id: "github-orchestrator-001"
  name: "GitHub Flow Master"
  platform: "github"
  capabilities:
    - issue_triage
    - pr_coordination
    - release_management
    - agent_delegation
    - workflow_automation

# Issue Management Agents
issue_agents:
  feature_request_agent:
    id: "gh-feature-001"
    name: "Feature Request Handler"
    github_integration:
      triggers: ["issue_opened", "issue_labeled:enhancement"]
      permissions: ["issues:write", "projects:write"]
    responsibilities:
      - "Parse feature requests"
      - "Create detailed specifications"
      - "Assign to project boards"
      - "Generate implementation plans"
    outputs:
      - github_issue
      - project_card
      - implementation_spec

  bug_hunter_agent:
    id: "gh-bug-001"
    name: "Bug Hunter"
    github_integration:
      triggers: ["issue_opened", "issue_labeled:bug"]
      permissions: ["issues:write", "pull_requests:read"]
    responsibilities:
      - "Analyze bug reports"
      - "Create reproducible tests"
      - "Find related code"
      - "Suggest fixes"
    outputs:
      - bug_report
      - test_case
      - suggested_fix

# Pull Request Agents
pr_agents:
  code_review_agent:
    id: "gh-review-001"
    name: "Automated Code Reviewer"
    github_integration:
      triggers: ["pull_request_opened", "pull_request_synchronize"]
      permissions: ["pull_requests:write", "checks:write"]
    responsibilities:
      - "Review code quality"
      - "Check test coverage"
      - "Verify documentation"
      - "Suggest improvements"
    outputs:
      - review_comments
      - approval_status
      - improvement_suggestions

  test_runner_agent:
    id: "gh-test-001"
    name: "Test Automation"
    github_integration:
      triggers: ["pull_request_opened", "push"]
      permissions: ["checks:write", "statuses:write"]
    responsibilities:
      - "Run test suites"
      - "Generate coverage reports"
      - "Performance benchmarks"
      - "Security scans"
    outputs:
      - test_results
      - coverage_report
      - performance_metrics

# Documentation Agents
doc_agents:
  api_docs_agent:
    id: "gh-docs-001"
    name: "API Documentation Generator"
    github_integration:
      triggers: ["push:main", "release_published"]
      permissions: ["contents:write", "pages:write"]
    responsibilities:
      - "Generate API docs from code"
      - "Update README files"
      - "Maintain wiki pages"
      - "Create examples"
    outputs:
      - api_documentation
      - readme_updates
      - wiki_pages

  changelog_agent:
    id: "gh-changelog-001"
    name: "Changelog Maintainer"
    github_integration:
      triggers: ["pull_request_merged", "release_created"]
      permissions: ["contents:write"]
    responsibilities:
      - "Track merged PRs"
      - "Categorize changes"
      - "Generate changelog"
      - "Update version files"
    outputs:
      - CHANGELOG.md
      - release_notes
      - version_bumps

# Release Management Agents
release_agents:
  release_manager:
    id: "gh-release-001"
    name: "Release Orchestrator"
    github_integration:
      triggers: ["workflow_dispatch", "schedule:weekly"]
      permissions: ["contents:write", "packages:write"]
    responsibilities:
      - "Coordinate releases"
      - "Tag versions"
      - "Create GitHub releases"
      - "Trigger deployments"
    outputs:
      - github_release
      - version_tag
      - deployment_trigger

  npm_publisher:
    id: "gh-npm-001"
    name: "NPM Package Publisher"
    github_integration:
      triggers: ["release_published"]
      permissions: ["packages:write"]
    responsibilities:
      - "Publish to NPM"
      - "Update package registry"
      - "Verify publication"
      - "Announce release"
    outputs:
      - npm_package
      - registry_update
      - release_announcement

# Workflow Agents
workflow_agents:
  dependency_updater:
    id: "gh-deps-001"
    name: "Dependency Manager"
    github_integration:
      triggers: ["schedule:daily", "workflow_dispatch"]
      permissions: ["contents:write", "pull_requests:write"]
    responsibilities:
      - "Check for updates"
      - "Test compatibility"
      - "Create update PRs"
      - "Security patches"
    outputs:
      - dependency_prs
      - security_updates
      - compatibility_report

  security_scanner:
    id: "gh-security-001"
    name: "Security Guardian"
    github_integration:
      triggers: ["push", "pull_request", "schedule:daily"]
      permissions: ["security_events:write"]
    responsibilities:
      - "Scan for vulnerabilities"
      - "Check dependencies"
      - "Review security practices"
      - "Create security advisories"
    outputs:
      - security_report
      - vulnerability_alerts
      - security_advisories

# Agent Hierarchy
hierarchy:
  - level: 0
    role: "master_orchestrator"
    authority: "full"
  - level: 1
    role: "issue_agents"
    authority: "issue_management"
  - level: 1
    role: "pr_agents"
    authority: "code_review"
  - level: 1
    role: "release_agents"
    authority: "release_management"
  - level: 2
    role: "workflow_agents"
    authority: "automation"

# GitHub Action Triggers
action_mappings:
  issues:
    opened: ["feature_request_agent", "bug_hunter_agent"]
    labeled: ["triage_by_label"]
    closed: ["update_project_board"]
    
  pull_request:
    opened: ["code_review_agent", "test_runner_agent"]
    merged: ["changelog_agent", "update_docs"]
    closed: ["cleanup_branch"]
    
  release:
    published: ["npm_publisher", "doc_agents"]
    created: ["release_manager"]
    
  push:
    main: ["security_scanner", "doc_agents"]
    tags: ["release_manager"]

# Communication Channels
communication:
  internal:
    protocol: "github_events"
    format: "json"
  external:
    notifications: ["github_actions", "webhooks"]
    reporting: ["issues", "discussions"]